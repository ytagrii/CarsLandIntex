@page "/admin"
@page "/admin/users"
@inherits OwningComponentBase<CarsLandIntex.Data.ApplicationDbContext>
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;

<h3>Users</h3>
@if (UserData?.Count() > 0)
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <td>Username</td>
                <td>Phone</td>
                <td>MFA Enabled?</td>
                <td>Email</td>
                <td>Email Confirmed</td>
                <td>Edit User</td>
            </tr>
        </thead>
        <tbody>
            @foreach (IdentityUser u in UserData)
            {
            <tr>
                <td>@u.UserName</td>
                <td>@u.PhoneNumber</td>
                <td>@u.TwoFactorEnabled</td>
                <td>@u.Email</td>
                <td>@u.EmailConfirmed</td>
                <td>
                    <NavLink class="btn btn-secondary btn-sm" href="@GetEditUrl(u.Id)">Edit</NavLink>
                </td>
             </tr>
            <tr>
                @if (UserRoles?.Count() > 0)
                {
                    @if (RoleData?.Count() > 0)
                    {
                        @foreach (IdentityRole ir in RoleData)
                        {
                            var foundRole = false;
                            @foreach (IdentityUserRole<string> iur in UserRoles)
                            {
                                @if (u.Id == iur.UserId)
                                {
                                    @if (iur.RoleId == ir.Id)
                                    {
                                        foundRole = true;
                                        @if (ir.Name == "Super Admin")
                                        {
                                            <td colspan="4">
                                                <button class="btn btn-sm btn-danger" @onclick="@(x => RemoveRole(u.Id, ir.Id))">
                                                    Revoke @ir.Name Access
                                                </button>
                                            </td>
                                        }
                                        else
                                        {
                                            <td colspan="1">
                                                <button class="btn btn-sm btn-danger" @onclick="@(x => RemoveRole(u.Id, ir.Id))">
                                                    Revoke @ir.Name Access
                                                </button>
                                            </td>
                                        }

                                    }
                                }
                            }
                            @if (foundRole == false)
                            {
                                @if (ir.Name == "Super Admin")
                                {
                                    <td colspan="4">
                                        <button class="btn btn-sm btn-warning" @onclick="@(x => AddRole(u.Id, ir.Id))">
                                            Add @ir.Name Access
                                        </button>
                                    </td>
                                }
                                else
                                {
                                    <td colspan="1">
                                        <button class="btn btn-sm btn-warning" @onclick="@(x => AddRole(u.Id, ir.Id))">
                                            Add @ir.Name Access
                                        </button>
                                    </td>
                                }


                            }

                        }
                    }
                }
                else
                {
                    <td colspan="6">Not Working</td>
                   
                }
               
            </tr>
            }
        </tbody>
    </table>
}
else
{
    <h3>No Users Found</h3>
}
@*@if (found == false)
{
    <select @onclick="@(x => UpdateRole(u.Id, 1))">
        <option></option>
        @if (RoleData?.Count() > 0)
        {
            @foreach (IdentityRole ir in RoleData)
            {
                <option value="@ir.Id">
                    @ir.Name
                </option>
            }
        }
    </select>
}*@
@*@if (RoleData?.Count() > 0)
    {
        @foreach (IdentityRole ir in RoleData)
        {
            <p>@ir.Id @ir.Name</p>
        }
    }

    @if (UserRoles?.Count() > 0)
    {
        @foreach (IdentityUserRole<string> iur in UserRoles)
        {
            <p>@iur.RoleId @iur.UserId</p>
        }
    }*@

@code {

    public CarsLandIntex.Data.ApplicationDbContext repo => Service;

    public IEnumerable<IdentityUser> UserData { get; set; }
    public IEnumerable<IdentityRole> RoleData { get; set; }
    public IEnumerable<IdentityUserRole<string>> UserRoles { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        UserData = await repo.Users.ToListAsync();
        RoleData = await repo.Roles.ToListAsync();
        UserRoles = await repo.UserRoles.ToListAsync();

    }

    public async Task AddRole(string userId, string roleId)
    {
        IdentityUserRole<string> temp = new IdentityUserRole<string>();
        temp.RoleId = roleId.ToString();
        temp.UserId = userId;
        repo.UserRoles.Add(temp);
        repo.SaveChanges();
        await UpdateData();
    }

    public async Task RemoveRole(string userId, string roleId)
    {
        IdentityUserRole<string> temp = repo.UserRoles.FirstOrDefault(x => x.UserId == userId && x.RoleId == roleId);
        repo.UserRoles.Remove(temp);
        repo.SaveChanges();
        await UpdateData();
    }

    public string GetEditUrl(string id) => $"/admin/users/edit/{id}";


}

